local TweenService = game:GetService("TweenService")

-- Constants for Colors
local UI_BACKGROUND_COLOR = Color3.fromRGB(30, 30, 30)
local TOPBAR_COLOR = Color3.fromRGB(40, 40, 40)
local BUTTON_COLOR = Color3.fromRGB(60, 60, 60)
local TEXT_COLOR = Color3.fromRGB(255, 255, 255)

-- ScreenGui Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CustomUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 250)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
mainFrame.BackgroundColor3 = UI_BACKGROUND_COLOR
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local originalSize = mainFrame.Size
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 12)

-- Topbar
local topbarHeight = 40
local topBar = Instance.new("Frame", mainFrame)
topBar.Size = UDim2.new(1, 0, 0, topbarHeight)
topBar.BackgroundColor3 = TOPBAR_COLOR
topBar.Name = "TopBar"
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0, 12)

-- Title Label (Modified for auto-text resizing)
local titleLabel = Instance.new("TextLabel", topBar)
titleLabel.Size = UDim2.new(1, -80, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Custom UI"
titleLabel.TextColor3 = TEXT_COLOR
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 14  -- Initially set to a reasonable size
titleLabel.TextWrapped = true  -- Ensures the text wraps instead of overflowing
titleLabel.TextTruncate = Enum.TextTruncate.AtEnd -- Ensures text gets truncated at the end

-- Close Button with Animation
local closeButton = Instance.new("TextButton", topBar)
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = BUTTON_COLOR
closeButton.Text = "X"
closeButton.TextColor3 = TEXT_COLOR
closeButton.Font = Enum.Font.Gotham
closeButton.TextSize = 14
Instance.new("UICorner", closeButton).CornerRadius = UDim.new(0, 8)

-- Minimize Button
local minimizeButton = Instance.new("TextButton", topBar)
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -70, 0, 5)
minimizeButton.BackgroundColor3 = BUTTON_COLOR
minimizeButton.Text = "_"
minimizeButton.TextColor3 = TEXT_COLOR
minimizeButton.Font = Enum.Font.Gotham
minimizeButton.TextSize = 14
Instance.new("UICorner", minimizeButton).CornerRadius = UDim.new(0, 8)

-- Sidebar & Content Container
local sidebar = Instance.new("Frame", mainFrame)
sidebar.Size = UDim2.new(0, 100, 1, -topbarHeight)
sidebar.Position = UDim2.new(0, 0, 0, topbarHeight)
sidebar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)

local contentContainer = Instance.new("Frame", mainFrame)
contentContainer.Size = UDim2.new(1, -100, 1, -topbarHeight)
contentContainer.Position = UDim2.new(0, 100, 0, topbarHeight)
contentContainer.BackgroundTransparency = 1

-- Tabs System
local tabs = {}

function createTab(name)
    -- Check if tab already exists
    if tabs[name] then return tabs[name].frame end

    local tabButton = Instance.new("TextButton", sidebar)
    tabButton.Size = UDim2.new(1, 0, 0, 30)
    tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabButton.Text = name
    tabButton.TextColor3 = TEXT_COLOR
    tabButton.Font = Enum.Font.Gotham
    tabButton.TextSize = 14
    tabButton.TextWrapped = true  -- Ensures tab text wraps instead of overflowing
    Instance.new("UICorner", tabButton).CornerRadius = UDim.new(0, 6)

    local contentFrame = Instance.new("Frame", contentContainer)
    contentFrame.Size = UDim2.new(1, 0, 1, 0)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Visible = false

    tabs[name] = {button = tabButton, frame = contentFrame}

    tabButton.MouseButton1Click:Connect(function()
        -- Show corresponding content when tab is clicked
        for _, t in pairs(tabs) do
            t.frame.Visible = false
        end
        contentFrame.Visible = true
    end)

    return contentFrame
end

-- Close Button Animation
closeButton.MouseButton1Click:Connect(function()
    local fadeOutTween = TweenService:Create(screenGui, TweenInfo.new(0.25), {BackgroundTransparency = 1})
    fadeOutTween:Play()
    fadeOutTween.Completed:Connect(function()
        screenGui:Destroy()
    end)
end)

-- Minimize Button Logic (Same as before)
local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    local goalSize = minimized and UDim2.new(originalSize.X.Scale, originalSize.X.Offset, 0, topbarHeight) or originalSize
    local tween = TweenService:Create(mainFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = goalSize})
    tween:Play()
    contentContainer.Visible = not minimized
    sidebar.Visible = not minimized
end)
